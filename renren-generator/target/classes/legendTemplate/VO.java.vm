package ${package}.model.pojo.vo.${module};

import ${package}.model.pojo.entity.${module}.${className};
import com.legend.module.core.model.pojo.vo.AbstractVO;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
#if(${hasDate})
import org.springframework.format.annotation.DateTimeFormat;
#end

#if(${hasDate})
import java.util.Date;
#end
#if(${hasBigDecimal})
import java.math.BigDecimal;
#end

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@EqualsAndHashCode(callSuper = true)
@Data
@ToString
public class ${className}VO extends AbstractVO<${className}> {
    private static final long serialVersionUID = 1L;

    #foreach ($column in $columns)
    /**
     * $column.comments
     */
    #if($column.attrType == "Date")
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
        #end
    private $column.attrType $column.attrname;
    #end

    @Override
    @SuppressWarnings("unchecked")
    public ${className}VO parseFrom(${className} ${classname}, String... ignoreProperties) {
        return (${className}VO) super.parseFrom(${classname}, ignoreProperties);
    }

}
